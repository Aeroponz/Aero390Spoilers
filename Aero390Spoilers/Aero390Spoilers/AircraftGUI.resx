<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>